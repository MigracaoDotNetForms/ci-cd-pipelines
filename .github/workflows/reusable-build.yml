on:
  workflow_call:
    inputs:
      solution_name:
        description: 'Nome da solução a ser compilada'
        required: true
        type: string
      build_configuration:
        description: 'Configuração de build (Debug ou Release)'
        required: true
        type: string
      test_path:
        description: 'Caminho onde os arquivos de teste estão localizados'
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        description: 'Token do SonarQube'
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

      # Build the project
    - name: Build solution
      run: msbuild ${{inputs.solution_name}} /p:Configuration=${{inputs.build_configuration}} 
      continue-on-error: false
    
    # Run tests
    - name: Run tests
      run: |
        $dlls = Get-ChildItem -Path . -Filter "*.Tests.dll" -Recurse
        foreach ($dll in $dlls) {
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe" `
        $dll.FullName `
        /Logger:trx
        }
      shell: pwsh

    # Setup NuGet
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Oficial SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v5.2.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
         -Dsonar.organization='migracaodotnetforms'
         -Dsonar.projectKey=${{ github.event.repository.name }}
         -Dsonar.verbose=true
         -Dsonar.exclusions=**/bin/**/*,**/obj/**/*,**/packages/**/*,**/test/**/*

    - name: Save Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.solution_name }}
        path: ${{ inputs.test_path }}
    


   

